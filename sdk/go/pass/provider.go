// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package pass

import (
	"reflect"

	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// The provider type for the pass package. By default, resources use package-wide configuration
// settings, however an explicit `Provider` instance may be created and passed during resource
// construction to achieve fine-grained programmatic control over provider settings. See the
// [documentation](https://www.pulumi.com/docs/reference/programming-model/#providers) for more information.
type Provider struct {
	pulumi.ProviderResourceState
}

// NewProvider registers a new resource with the given unique name, arguments, and options.
func NewProvider(ctx *pulumi.Context,
	name string, args *ProviderArgs, opts ...pulumi.ResourceOption) (*Provider, error) {
	if args == nil {
		args = &ProviderArgs{}
	}
	if args.RefreshStore == nil {
		args.RefreshStore = pulumi.BoolPtr(true)
	}
	if args.StoreDir == nil {
		args.StoreDir = pulumi.StringPtr(getEnvOrDefault("", nil, "PASSWORD_STORE_DIR").(string))
	}
	var resource Provider
	err := ctx.RegisterResource("pulumi:providers:pass", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

type providerArgs struct {
	// Whether or not call `pass git pull`.
	RefreshStore *bool `pulumi:"refreshStore"`
	// Password storage directory to use.
	StoreDir *string `pulumi:"storeDir"`
}

// The set of arguments for constructing a Provider resource.
type ProviderArgs struct {
	// Whether or not call `pass git pull`.
	RefreshStore pulumi.BoolPtrInput
	// Password storage directory to use.
	StoreDir pulumi.StringPtrInput
}

func (ProviderArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*providerArgs)(nil)).Elem()
}
