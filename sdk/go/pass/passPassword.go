// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package pass

import (
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

type PassPassword struct {
	pulumi.CustomResourceState

	// additional secret data.
	Data pulumi.MapOutput `pulumi:"data"`
	// secret password.
	Password pulumi.StringOutput `pulumi:"password"`
	// Full path where the pass data will be written.
	Path pulumi.StringOutput `pulumi:"path"`
}

// NewPassPassword registers a new resource with the given unique name, arguments, and options.
func NewPassPassword(ctx *pulumi.Context,
	name string, args *PassPasswordArgs, opts ...pulumi.ResourceOption) (*PassPassword, error) {
	if args == nil || args.Password == nil {
		return nil, errors.New("missing required argument 'Password'")
	}
	if args == nil || args.Path == nil {
		return nil, errors.New("missing required argument 'Path'")
	}
	if args == nil {
		args = &PassPasswordArgs{}
	}
	var resource PassPassword
	err := ctx.RegisterResource("pass:index/passPassword:PassPassword", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetPassPassword gets an existing PassPassword resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetPassPassword(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *PassPasswordState, opts ...pulumi.ResourceOption) (*PassPassword, error) {
	var resource PassPassword
	err := ctx.ReadResource("pass:index/passPassword:PassPassword", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering PassPassword resources.
type passPasswordState struct {
	// additional secret data.
	Data map[string]interface{} `pulumi:"data"`
	// secret password.
	Password *string `pulumi:"password"`
	// Full path where the pass data will be written.
	Path *string `pulumi:"path"`
}

type PassPasswordState struct {
	// additional secret data.
	Data pulumi.MapInput
	// secret password.
	Password pulumi.StringPtrInput
	// Full path where the pass data will be written.
	Path pulumi.StringPtrInput
}

func (PassPasswordState) ElementType() reflect.Type {
	return reflect.TypeOf((*passPasswordState)(nil)).Elem()
}

type passPasswordArgs struct {
	// additional secret data.
	Data map[string]interface{} `pulumi:"data"`
	// secret password.
	Password string `pulumi:"password"`
	// Full path where the pass data will be written.
	Path string `pulumi:"path"`
}

// The set of arguments for constructing a PassPassword resource.
type PassPasswordArgs struct {
	// additional secret data.
	Data pulumi.MapInput
	// secret password.
	Password pulumi.StringInput
	// Full path where the pass data will be written.
	Path pulumi.StringInput
}

func (PassPasswordArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*passPasswordArgs)(nil)).Elem()
}
